# Zugzwang Project
# Copyright (c) 2019, 2024 Gustaf Mossakowski <gustaf@koenige.org> 
# Map for zzform + GeoJSON + Leaflet
#
# List of fields:
# geojson
#
<div id="map" class="smallmap" style="height: 580px;"> </div>

<script src="%%% setting behaviour_path %%%/leaflet/leaflet.js"></script>
<script src="%%% item geojson %%%"></script>
<script>

%%% template leaflet-tiles-mapbox %%%

	L.Icon.Default.imagePath = '%%% setting layout_path %%%/carabidae/symbols/';
	var map = L.map('map').addLayer(tiles);
	var geoJsonLayer = L.geoJson(locations, {
        pointToLayer: function(feature, latlng) {
			if (feature.properties.style === 'default' | !feature.properties.style) {
				var myIcon = new L.Icon.Default({
					iconUrl: 'marker-icon.png',
					iconRetinaUrl: 'marker-icon.png',
					iconSize: [18, 27], iconAnchor: [9, 27]
				});
			} else {
				var myIcon = new L.Icon.Default({
					iconUrl: feature.properties.style + '.png',
					iconRetinaUrl: feature.properties.style + '.png',
					iconSize: [32, 32], iconAnchor: [16, 16]
				});
			}
	        myIcon.options.shadowSize = [0,0];
            return L.marker(latlng, {
                icon: myIcon, title: feature.properties.title,
                link: feature.id
            });
        },
		onEachFeature: function (feature, layer) {
			var popupText = '<p class="place"><strong>' + feature.properties.title + '</strong>';
			popupText += "<br>Datasource: " + feature.properties.Datasource;
			popupText += "<br>Index no: " + feature.properties.IndexNo;
			popupText += "<br>Country: " + feature.properties.Country;
			popupText += "<br>Region: " + feature.properties.Region;
			popupText += "<br>Locality: " + feature.properties.Locality;
			popupText += "<br>Sets: " + feature.properties.Sets;
			popupText += "<br><a href='?edit=" + feature.id + "'>Edit this record</a>";
			popupText += '</p>';

			layer.bindPopup(popupText);
		}
	});
	map.addLayer(geoJsonLayer);
	map.fitBounds(geoJsonLayer.getBounds(), {maxZoom: 5, padding: [10, 10]});

</script>
